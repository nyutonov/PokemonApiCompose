package uz.gita.pokemoncompose.utils.navigationimport kotlinx.coroutines.flow.MutableSharedFlowimport javax.inject.Injectimport javax.inject.Singleton@Singletonclass AppNavigatorDispatcher @Inject constructor() : AppNavigator, AppNavigatorHandler {    override val uiNavigator = MutableSharedFlow<NavigationArgs>()    private suspend fun myNav(navigationArgs: NavigationArgs) {        uiNavigator.emit(navigationArgs)    }    override suspend fun openWithSave(myScreen: MyScreen) = myNav {        push(myScreen)    }    override suspend fun openWithoutSave(myScreen: MyScreen) = myNav {        replace(myScreen)    }    override suspend fun back() = myNav {        pop()    }}